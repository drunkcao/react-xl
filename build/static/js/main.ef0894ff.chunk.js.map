{"version":3,"sources":["xueli-react/Header.js","xueli-react/Home.js","xueli-react/RouteWithSubRoutes.js","router.config.js","xueli-react/Doc.js","xueli-react/Core.js","xueli-react/Guide.js","xueli-react/Api.js","xueli-react/Hooks.js","xueli-react/Tuto.js","xueli-react/Blog.js","xueli-react/Comm.js","xueli-react/Login.js","App.js","index.js"],"names":["Header","activeClassName","exact","to","Home","props","style","textAlign","onClick","history","push","RouteWithSubRoutes","route","pri","console","log","routes","PrivateRoute","path","render","component","withRouter","className","map","i","key","from","localStorage","setItem","replace","location","state","Com","rest","getItem","pathname","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ef0894ff.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建界面的JavaScript库</p>\r\n            <div>\r\n                <button onClick={()=>props.history.push('/doc')}>快速开始</button>\r\n                <button onClick={()=>props.history.push('/tuto')}>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport {\r\n    NavLink, Route, Redirect,Switch,\r\n  \r\n} from 'react-router-dom'\r\nimport {PrivateRoute} from '../App'\r\n// function RouteWithSubRoutes(route) {\r\n// \treturn (\r\n// \t  <Route\r\n\r\n// \t\tpath={route.path}\r\n// \t\trender={props => (\r\n// \t\t  // pass the sub-routes down to keep nesting\r\n// \t\t  <route.component {...props} routes={route.routes} />\r\n// \t\t)}\r\n// \t  />\r\n// \t);\r\n//   }\r\nconst  RouteWithSubRoutes = (route) => {\r\n\t// console.log(route);\r\n\tif(route.pri){\r\n\t\tconsole.log('1');\r\n\t\tconsole.log(route.routes)\r\n\t\treturn(\r\n\t\t\t<PrivateRoute {...route} routes={route.routes}></PrivateRoute>\r\n\t\t)\r\n\t}\r\n\telse{\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Route\r\n\t\t\t  path={route.path}\r\n\t\t\t  render={props => (\r\n\t\t\t\t// pass the sub-routes down to keep nesting\r\n\t\t\t\t<route.component {...props} routes={route.routes} />\r\n\t\t\t  )}\r\n\t\t\t/>\r\n\t\t  );\r\n\t}\r\n\t\r\n  }\r\nexport default RouteWithSubRoutes\r\n","import Home from './xueli-react/Home';\r\nimport Doc from './xueli-react/Doc';\r\nimport Tuto from './xueli-react/Tuto';\r\nimport Blog from './xueli-react/Blog';\r\nimport Comm from './xueli-react/Comm';\r\nimport Login from './xueli-react/Login';\r\nimport Core from './xueli-react/Core';\r\nimport Guide from './xueli-react/Guide';\r\nimport Api from './xueli-react/Api';\r\nimport Hooks from './xueli-react/Hooks';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/doc',\r\n        component: Doc,\r\n        pri: true,\r\n        routes:[\r\n            {\r\n                path:'/doc/Core',\r\n                component:Core,\r\n            },\r\n            {\r\n                path:'/doc/guide',\r\n                component:Guide,\r\n            },\r\n            {\r\n                path:'/doc/api',\r\n                component:Api,\r\n            },\r\n            {\r\n                path:'/doc/hooks',\r\n                component:Hooks,\r\n            }\r\n        \r\n        ]\r\n    },\r\n    {\r\n        path: '/tuto',\r\n        component: Tuto,\r\n        pri: true\r\n    },\r\n    {\r\n        path: '/blog',\r\n        component: Blog\r\n    },\r\n    {\r\n        path: '/comm',\r\n        component: Comm\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n]\r\nexport default routes;\r\n\r\n\r\n// home组件这种配置方式会在home组件的props内注入四个属性\r\n// <Route exact path=\"/\" component={Home}/>\r\n// <PrivateRoute path=\"/doc\" component={Doc}/>\r\n// <Route path=\"/doc/:id\" component={Doc}/> \r\n// <Route path=\"/tuto\" component={Tuto}/>\r\n// <PrivateRoute path=\"/blog\" component={Blog}/>\r\n// <Route path=\"/comm\" component={Comm}/>\r\n// <Route path=\"/login\" component={Login}/>\r\n// no-match \r\n// <Route path=\"*\" component={()=><div>404</div>}/>\r\n\r\n","import React from 'react'\r\nimport {NavLink, Redirect,Switch,withRouter} from 'react-router-dom'\r\nimport './doc.css';\r\nimport RouteWithSubRoutes from './RouteWithSubRoutes'\r\n\r\nconst Doc=({ routes })=> {\r\n    return (\r\n        <div className='doc'>\r\n            <div className='content'>\r\n            <Switch>\r\n                {routes.map((route, i) => (\r\n                <RouteWithSubRoutes key={i} {...route} />\r\n                 ))}\r\n                <Redirect from='/doc' to='/doc/core'/>\r\n            </Switch>\r\n</div>\r\n                <ol>\r\n                     <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n                     <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n                     <li><NavLink to='/doc/api'>API</NavLink ></li>\r\n                    <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n                </ol>  \r\n        \r\n        </div>\r\n    );\r\n  }\r\nexport default withRouter(Doc);\r\n","import React from 'react'\r\n\r\nconst Core = () => {\r\n    return (\r\n        <h2>\r\n            core\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Core\r\n","import React from 'react'\r\n\r\nconst Guide = () => {\r\n    return (\r\n        <h2>\r\n            guide\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Guide\r\n","import React from 'react'\r\n\r\nconst Api = () => {\r\n    return (\r\n        <h2>api</h2>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default Api\r\n","import React from 'react'\r\n\r\nconst Hooks = () => {\r\n    return (\r\n        <h2>\r\n            hooks\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Hooks\r\n","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto\r\n","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            Comm\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm\r\n","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n    const login=()=>{\r\n        localStorage.setItem('userinfo','tom')\r\n        props.history.replace(props.location.state)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport { HashRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\nimport Header from './xueli-react/Header';\r\n// import Doc from './guanwang/Doc'\r\n// import Login from './guanwang/Login'\r\n// import Tuto from './guanwang/Tuto'\r\n// import Home from './guanwang/Home'\r\n// import Comm from './guanwang/Comm'\r\n// import Blog from './guanwang/Blog'\r\n\r\nimport routes from './router.config';\r\nimport {Button,TabBar} from 'antd-mobile'\r\n// import Mytab from './taobao/Mytab';\r\n// import Home from './taobao/Home';\r\n// import Cart from './taobao/Cart';\r\n// import Dingdan from './taobao/Dingdan';\r\n// import Mytb from './taobao/Mytb'\r\n// import Child from './taobao/Child'\r\nfunction PrivateRoute({ component:Com, ...rest }) {\r\n\treturn (\r\n\t  <Route\r\n\t\t{...rest}\r\n\t\trender={({ location }) =>\r\n\t\t   localStorage.getItem('userinfo')\r\n\t\t   ?<Com  {...rest}/> \r\n\t\t   : (\r\n\t\t\t<Redirect\r\n\t\t\t  to={{\r\n\t\t\t\tpathname: \"/login\",\r\n\t\t\t\tstate: location \r\n\t\t\t  }}\r\n\t\t\t/>\r\n\t\t  )\r\n\t\t}\r\n\t  />\r\n\t);\r\n  }\r\n//   function RouteWithSubRoutes(route) {\r\n// \treturn (\r\n// \t  <Route\r\n// \t\tpath={route.path}\r\n// \t\trender={props => (\r\n// \t\t  // pass the sub-routes down to keep nesting\r\n// \t\t  <route.component {...props} routes={route.routes} />\r\n// \t\t)}\r\n// \t  />\r\n// \t);\r\n//   }\r\nconst App = ()=>{\r\n\r\n//私有权限路由封装\r\n\r\n\treturn <Router>\r\n\t\t<Header/>\r\n\t\t<Switch>\r\n\t\t\t{\r\n\t\t\t\troutes.map(({pri,...rest})=>{\r\n\t\t\t\t\tif(pri){\r\n\t\t\t\t\t\treturn <PrivateRoute {...rest} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <Route {...rest} />\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t</Switch>\r\n\t</Router>\r\n\r\n\r\n\t// return <Router>\r\n\t// \t<Switch>\r\n\t// \t\t<Route exact path='/home' component={Home} />\r\n\t// \t\t<Route path='/cart' component={Cart} />\r\n\t// \t\t<Route path='/dingdan' component={Dingdan} />\r\n\t// \t\t<Route path='/Mytb' component={Mytb} />\r\n\t// \t\t<Route path='/child' component={Child} />\r\n\t// \t</Switch>\r\n\t// \t<Mytab/>\r\n\t// </Router>\r\n}\r\nexport default App;\r\nexport {PrivateRoute};\r\n// 路由基本配置\r\n// 路由传参(以及获取参数-props)\r\n// 动态路由(/:page)\r\n// js跳转\r\n// 权限路由\r\n// npm i antd-mobile --registry https://\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t{/* home组件这种配置方式会在\r\n\t\t\tHome组件的props内注入四个属性\r\n\t\t\t */}\r\n\t\t\t{/* <Route exact path='/' component={ Home } />\r\n\t\t\t<PrivateRoute path='/doc' component={ Doc } />\r\n\t\t\t{/* <Route path='/doc/:id' component={ Doc } /> */}\r\n\t\t\t{/* <PrivateRoute path='/tuto' component={ Tuto } />\r\n\t\t\t<PrivateRoute path='/blog' component={ Blog } />\r\n\t\t\t<Route path='/comm' component={ Comm } />\r\n\t\t\t<Route path='/login' component={ Login } /> */}\r\n\t\t\t{/* no-match */ }\r\n\t\t\t{/* <Route component={()=><div>404</div>} /> */ }\r\n\t\t\t{/* <Route path='*' component={ () => <div>404</div> } /> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Home = ()=>{\r\n// \treturn <div>Home</div>\r\n// }\r\n// const About = (props)=>{\r\n// \tconsole.log(props.location.state)\r\n// \treturn <div>About</div>\r\n// }\r\n// const Content = (props)=>{\r\n// \tconsole.log(props)\r\n// \treturn <div>{props.match.params.page}</div>\r\n// }\r\n// const App = ()=>{\r\n// \treturn <Router>\r\n// \t\t<ul>\r\n// \t\t\t<li><NavLink exact activeStyle={{color:'red'}} to='/'>home</NavLink></li>\r\n// \t\t\t<li><NavLink activeStyle={{color:'red'}} to={{\r\n// \t\t\t\tpathname:'/about',\r\n// \t\t\t\tstate:{id:100}\r\n// \t\t\t}}>About</NavLink></li>\r\n// \t\t\t<li><NavLink activeStyle={{color:'red'}} to='/news'>News</NavLink></li>\r\n// \t\t\t<li><NavLink activeStyle={{color:'red'}} to='/content/1'>content01</NavLink></li>\r\n// \t\t\t<li><NavLink activeStyle={{color:'red'}} to='/content/2'>content02</NavLink></li>\r\n// \t\t</ul>\r\n// \t\t<Switch>\r\n// \t\t\t<Route exact path='/' component={Home} />\r\n// \t\t\t<Route path='/about' component={About}>\r\n// \t\t\t</Route>\r\n// \t\t\t<Route path='/news' render={()=><div>News</div>}/>\r\n// \t\t\t<Route path='/content/:page' component={Content}/>\r\n// \t\t</Switch>\r\n// \t</Router>\r\n// }\r\n\r\n\r\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './pages/app';\n// import Hoc,{Detail} from './pages/hoc'\n// import Hook from './pages/Hook'\n// import Context from './pages/context'\n// import Control from './components/control'\n// import TodoList from './xueli0930/TodoList'\nimport App from './App';\nimport 'antd-mobile/dist/antd-mobile.css';\n\n\nReactDOM.render(\n  // <Context.Provider value='123'> <Hook/></Context.Provider>,\n<App/>,\n  \n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\n\n\n//const List = (props)=>{\n// alt shift + 上下键   复制一行\n// alt + 上下键         移动一行\n// 按住alt ，鼠标点击\n// Ctrl + shift + 左右键，选中整个单词\n// ctrl+shift+L \n\n\n\n\n// const Buttons = ()=>{\n//   const btns = [1,2,3,4,5];\n//   return <div>\n//     {\n//       btns.map((item)=><button>{item}</button>)\n//     }\n//   </div>\n// }\n\n\n\n// let ele = <h1 id = \"title\" className = \"tit\" >\n//     <div > hello </div>\n//     react\n//     </h1>;\n// console.log(ele)\n\n// let ReactDOM = {\n//     render(eleObj, container) {\n//         //解构\n//         const { type, props } = eleObj;\n//         //创建第一层结点\n//         let ele = document.createElement(type);\n//             //遍历属性对象，将属性添加到第一层节点对象\n//             for (const prop in props) {\n//                 // if(prop==\"classname\"){\n//                 //     ele.setAttribute(\"class\",props[prop]);\n//                 // }\n//                 if (prop == \"children\") {\n//                     //将第一层节点对象的子元素添加进去\n//                     props.children.forEach((child) => {\n//                             if (typeof child == \"string\") {\n//                                     const txtNode = document.createTextNode(props[prop]);\n//                                     ele.appendChild(txtNode);\n//                                 }else{\n//                                     ReactDOM.render(child, ele);\n//                                 }\n//                             })\n//                     }else {\n                        \n//                         ele[prop] = props[prop];\n//                     }\n//                 }\n//                 //将第一层DOM节点添加到container中\n//                 container.appendChild(ele);\n//             }\n//     }\n\n\n\n\n//组件声明\n//函数组件\n//UI（展示）组件\n// function App(props){\n//     const{title,id}=props;\n//     return<div>\n//         <App/>\n//         <div>{title}</div>\n// <div>{id}</div>\n//     </div>\n// }\n\n// //智能组件\n// class Demo extends React.Component{\n//     constructor(){\n//         super();\n//         //声明状态\n//         this.state={\n//             name:new Date().toLocaleString\n//         }\n//         setInterval(() => {\n            \n//         }, 1000);(()=>{\n//             this.setState({name:new Date().toLocaleString\n//         },3000);\n//     }\n//     render(){\n//         return <div>\n//             <div>name:{this.state.name}</div>\n//             <App title=\"abc\" id=\"app\"/ >\n//             <App title=\"abc\" id=\"app\"/ >\n//         </div>\n//     }\n// }"],"sourceRoot":""}